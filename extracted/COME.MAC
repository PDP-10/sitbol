	XLIST
	COMMENT .






			* * *   S I T B O L   * * *

				VERSION   3




	COPYRIGHT STEVENS INSTITUTE OF TECHNOLOGY   1972, 1973

	ALL RIGHTS RESERVED.




	LIST
	SUBTTL	COMMON EQUATED SYMBOLS AND MACROS
;		---------------------------------
;
	IFNDEF	%COM,<XLIST>
; DEFINE %COM TO LIST THIS FILE
; DEFINE %COM==-2 TO ALSO INCLUDE END STATEMENT


IFDEF %COM,<IFE %COM+2,<TITLE COM -- COMMON SYMBOLS AND MACROS>>
;   1.	COMMON SYMBOLS
;
;	1.1  REGISTERS
;	1.2  DESCRIPTOR SYMBOLS
;	1.3  DATA STRUCTURE SYMBOLS
;	1.4  CHARACTER TABLE SYMBOLS
;	1.5  SAVE AREA LENGTHS
;	1.6  MISCELLANY
;
;   2.	MACROS
;
;	2.1  MISCELLANY
;	2.2  PUSH POP MACROS
;	2.3  EXTERN'S FOR THE DATA REGION (EXDATA)

; Define FTxxx nonzero to include a feature:
;
FTEXT==1	; external functions (LOAD and UNLOAD)

	SUBTTL	1.1  REGISTERS
;
;	1.1 REGISTERS
;	-------------
;
	STACK=1	; SYSTEM STACK
	SURF=2		; SEPARATES SEA AND AIR
	HSR=3		; HISTORY STACK REG FOR PATT MATCH
;
	P1=4		; 1ST PRIMARY REG.
	P2=P1+1	; 2ND PRIMARY REG.
	PLINK=P1	; PRIMARY LINKING REGISTER
;
	S1=P2+1	; 1ST SECONDARY REGISTER
	S2=S1+1	; 2ND SECONDARY
	S3=S2+1	; 3RD SECONDARY
	SLINK=S1	; SECONDARY LINKING REGISTER
;
	T1=S3+1	; 1ST TERTIARY REGISTER
	T2=T1+1	; 2ND TERTIARY
	T3=T2+1	; 3RD TERTIARY
	T4=T3+1	; 4TH TERTIARY
	TLINK=T1	; TERTIARY LINKING REG.
;
	Q1=T4+1	; 1ST QUATERNARY REG.
	Q2=Q1+1	; 2ND QUATERNARY
	Q3=Q2+1	; 3RD QUATERNARY
	QLINK=Q1	; QUATERNARY LINKING REG.
;
	Z=0		; GENERAL USAGE REGISTER
	ZERO=0		; GENERAL USAGE REGISTER
;

	SUBTTL	1.2. DESCRIPTOR SYMBOLS
; 		-----------------------
;
; 	1.2.1 FLAGS
; 	-----------
;
	CDIFF==	400000	; CODE INTERPRETER FUNCTION
	CDFF==	200000	; CODE FUNCTION
	PDC==	100000	; PROTECTED DATA CLASS
	INDC==	040000	; INDIRECT DATA CLASS
	NONDC==	020000	; NON-DATA CLASS
	TVDC==	010000	; TRAPPED VARIABLE DATA CLASS
	FLDC==	004000	; FLOATING DATA CLASS
	NUMDC==	002000	; NUMERIC DATA CLASS
	SJUNKF==001000	; STACK JUNK FLAG
	BLOKF==	000400	; BLOK FLAG
	CDAF==	NONDC	; CODE ARGUMENT FLAG
;
; 	1.2.2 DATATYPES
; 	---------------
;
	IDT=	1+NUMDC	; INTEGER
	RDT=	2+NUMDC	; REAL
	SDT=	3+FLDC	; STRING
	PDT=	4+FLDC	; PATTERN
	ADT=	5+FLDC	; ARRAY
	EDT=	6+FLDC	; EXPRESSION
	CDT=	7+FLDC	; CODE
	TDT=	10+FLDC	; TABLE
	NDT=	11+FLDC	; NAME
	DDT=	12+FLDC	; DEFINED DATATYPE
	CSDT==	13+FLDC	; CHARACTER SET
	UTDT==	14+FLDC	; UTILITY
	IODT==	15+FLDC	; I/O
;
; 	1.2.3 OTHER VALUES FOR THE DT FIELD
; 	-----------------------------------
;
	VAR==	NONDC+INDC+FLDC	; VARIABLE
	TVAR==	NONDC+TVDC+FLDC	; TRAPPED VARIABLE
	CONST==	NONDC+INDC+PDC	; CONSTANT
	JUNK==	NONDC+SJUNKF	; DENOTES JUNK ON STACK
	CDF==	CDFF		; CODE FUNCTION - # OF ARGS
	CDIF==	CDFF+CDIFF	; CODE INTERPRETER FUNCTION
;
; 	1.2.4 FIELDS
; 	------------
;
	DTFLGS==777700	; MASK FOR DT FLAGS
	DTNUM==	000077	; MASK FOR DT NUMBER
	MAXDTN==12	; MAXIMUM USER DATATYPE NUMBER
	CDARGS==007777	; MASK FOR ARG COUNT OF CDF
	CDFLGS==770000	; MASK FOR CODE FLAGS

	SUBTTL	1.3. DATA STRUCTURE SYMBOLS
;		---------------------------
;
;	1.3.1 VARIABLE BLOCK SYMBOLS
;	----------------------------
;
	VALUE==	0	; VALUE OF VARIABLE
	VLABEL==2	; RIGHT SIDE POINTS TO SOME CBLOK
			; LEFT SIDE IS OFFSET
	VFUNC==	3	; (RIGHT) ADDRESS OF FUNCTION BLOK
	VBDT==	3	; (LEFT) DATATYPE IF ANY
	VNAME==	4	; NAME OF VARIABLE BLOCK
	VFLAGS==6	; FLAGS FOR VARIABLE BLOCK
	VKEY==	6	; NUMBER OF KEYWORD OR 0 IF NOT
	VLINK==	6	; (RIGHT) ADDRESS OF NEXT VARIABLE BLOCK
	VARSIZ==7	; VARIABLE BLOCK SIZE
;
	OPFLAG==400000	; VARIABLE IS AN OPERATOR
	LTFLAG==200000	; LABEL IS BEING TRACED
	VCTFL==100000	; CALL TRACE FLAG
	VRTFL==040000	; RETURN TRACE FLAG
	KYMASK==000077	; MASK FOR KEYWORD
;
;  IN ADDITION TO THESE FIELDS, FOR OPERATORS THE FOLLOWING FIELDS
;  HAVE SIGNIFICANCE.
;
	LPREC==	2	; (LEFT) LEFT PRECEDENCE
	RPREC==	3	; (LEFT) RIGHT PRECEDENCE
	VUNARY==2	; UNARY OPERATOR FBLOC ADDRESS
	VBINRY==3	; BINARY OPERATOR FBLOK ADDRESS
;

	SUBTTL	1.3.2 BLOK SYMBOLS
;		------------------
;
;	1.3.2.1  BLOK CODES
;	-------------------
;
	BTCODE==0	; (LEFT) CODE FOR BLOK TYPE
	BLENG== 0	; (RIGHT) BLOK LENGTH
	GCFLD== 1	; GARBAGE COLLECTION FIELD
	LHDR==	2	; LENGTH OF BLOK HEADER
;
;    BLOK TYPE CODES
;
	SBLOK==	3+BLOKF	; STRING BLOK
	PBLOK==	SBLOK+1	; PATTERN BLOK
	ABLOK== PBLOK+1	; ARRAY BLOK
	EBLOK== ABLOK+1	; EXPRESSION BLOK
	CBLOK==	EBLOK+1	; CODE BLOK
	TBLOK==	CBLOK+1	; TABLE BLOK
	DBLOK==	TBLOK+2	;DEFINED DATA BLOK
;
;   INTERNAL BLOK'S
;
	CTBLOK==DBLOK+1		; CHARACTER TABLE
	UTBLOK==CTBLOK+1	; UTILITY BLOK
	IOBLOK==UTBLOK+1	; I/O BLOK
	TEBLOK==IOBLOK+1	; TABLE ELEMENT BLOK
	JKBLOK==TEBLOK+1	; JUNK BLOK
;
;   FUNCTON BLOK'S
;
	FBLOK== JKBLOK+1	; DEFINED FUNCTION
	DFBLOK==FBLOK+1		; DEFINED DATATYPE FBLOK
	FFBLOK==DFBLOK+1	; FIELD OF DEF. DATA FBLOK
	EFBLOK==FFBLOK+1	; EXTERNAL FUNCTION FBLOK
	TFBLOK==EFBLOK+1	; TRACED FBLOK
;
;   TRAPPING BLOK'S
;
	TRBLOK==TFBLOK+1	; TRACE BLOK
	IABLOK==TRBLOK+1	; INPUT-ASSOCIATED VARIBLE
	OABLOK==IABLOK+1	; OUTPUT-ASSOCIATED VARIBLE
;
;    OTHER MISC. BLOKS
;
	BUBLOK==OABLOK+1	; BUFFER BLOK
	OBBLOK==BUBLOK+1	; OLD BUFFER BLOK
	STBLOK==OBBLOK+1	; STREAM BLOK

;	1.3.2.2 DATA BLOK FIELDS
;	------------------------
;
;   THE SBLOK
;   ---------
	SCHARS==LHDR	; START OF CHARACTER INFORMATION
;
;   THE PBLOK
;   ---------
;	PBLOK HEADER FIELDS
	PSTART==LHDR	; USED FOR RAPID SCAN AT MATCH START
	PMIN==	LHDR+2	; MINIMUM NUMBER OF CHARACTERS FOR ENTIRE PATT.
	LPHDR==	LHDR+3	; LENGTH OF PATTERN HEADER
;
;	PATTERN NODE FIELDS
	PPROG== 0	; (RIGHT) ADDRESS OF PROGRAM TO HANDLE PRIMITIVE
	PRESID==0	; (LEFT) RESIDUAL FIELD
	PALT==	1	; (LEFT) ALTERNATE (REL. TO PBLOK HEAD)
	PSUBS==	1	; (RIGHT) SUBSEQUENT (REL. TO PBLOK HEAD)
	PARG==	2	; ARGUMENT (TWO WORD DESCRIPTOR)
	PNDSZ== 4	; PATTERN NODE SIZE
;   THE ABLOK
;   ---------
	APROTO==LHDR		; ARRAY PROTOTYPE
	NSUBS==	APROTO+2	; NUMBER OF SUBSCRIPTS
	AHASH==	NSUBS		; HASH NUMBER
	SUBFAC==NSUBS+1		; MULTIPLICATION FACTOR
	SUBLBD==SUBFAC+1	; SUBSCRIPT LOWER BOUND
	SUBDIM==SUBLBD		; SUBSCRIPT DIMENSION
;

;   THE CBLOK
;   ---------
;
	LCLINK==LHDR		; LAST CODE BLOK
	NCLINK==LHDR+1		; NEXT CODE BLOK
	CCODE== NCLINK+1	; BEGINNING OF COMPILED CODE
;	OFFSETS FROM STATEMENT HEADER
	CHEAD==0		; LEFT HALF DENOTES INTERPRETER
			; FUNCTION (CDIF) AND THE RIGHT HALF
			; DENOTES AN ADDRESS IN THE INT. (BGST)
	CSTNO== 1	; (LEFT) STATEMENT NUMBER FOR STATEMENT
	CFGOTO==1	; (RIGHT) OFFSET (FROM CBLOK HEAD) TO
			; LOCATION WE CAN GO TO UPON FAILURE.
	CLAST== 2		; OFFSET OF LAST PREVIOUS STATEMENT
	CNEXT== 2		; OFFSET OF NEXT STATEMENT
	CRULE==	3		; OFFSET OF RULE FROM ST HEAD
;
;   THE TBLOK
;   ---------
	THASH== LHDR		; HASHNO FOR TABLES
	TNBUCK==LHDR		; # OF BUCKETS
	TBUCK== LHDR+1		; START OF BUCKETS
;
;   THE DBLOK (DEFINED DATA OBJECTS)
;   ---------
	ADFBLK==LHDR	; (RIGHT) ADDRESS OF DFBLOK (INDICATES THE
			; DATATYPE)
	DHASH==LHDR	; (LEFT) A UNIQUE NUMBER ASSIGNED FOR HASHING
			; PURPOSES
	DFLDS==LHDR+1	; START OF FIELDS. ONE DESRIPTOR PER FIELD.
;
;   THE CTBLOK  (CHARACTER TABLE)
;   ----------
	CTBITS==LHDR	; OFFSET FOR 128-WORD TABLE
;
;   THE TEBLOK
;   ----------
	TEREF==LHDR	; FIELD TO PUT DESCRIPTOR OF THE REFERENCE
			; ELEMENT (I.E. THE 'ABC' OF T<'ABC'>)
	TEVAL==TEREF+2		; VALUE OF THE TABLE ELEMENT
	TELINK==TEVAL+2		; NEXT TEBLOK ON CHAIN
	LTEBLK==TELINK+1	; LENGTH OF TEBLOK
;

;   THE FBLOK
;   ---------
	FFLAGS==LHDR		; (LEFT) FUNCTION FLAGS (SEE BELOW)
	FNARGS==LHDR		; (RIGHT) NUMBER OF ARGUMENTS
	FCODE==LHDR+1		; INSTRUCTION TO BE EXECUTED
;
	FNTMPS==FCODE+1		; (LEFT) NUMBER OF TEMPORARIES
	FNAME==FCODE+1		; (RIGHT) ADDRESS OF NATURAL VARIABLE
				; INDICATING NAME OF FUNCTION
	FLABEL==FNAME+1		; (RIGHT) ADDRESS OF NATURAL VARIABLE
				; INDICATING NAME OF LABEL.
	FARGS==FLABEL+1		; BEGINNING OF LIST OF FORMAL
				; PARAMETER AND TEMPORARY NAMES
;   (FLAGS)
	FEAFL==1		; EVALUATE ARGUMENTS FLAG
	FSAFL==2	; SUPPLEMENT (OR SUPPLY) ARGUMENTS FLAG
	FAAFL==4	; ANY (NUMBER OF) ARGUMENTS FLAG.
	FCTFL==10	; FUNCTION IS CALL TRACED
	FRTFL==20	; FUNCTION IS RETURN TRACED
;
;   THE DFBLOK
;   ----------
	DFNAME==4	; NAME OF DATATYPE (ADDRESS OF VAR. BLOCK)
	DFFLDS==5	; START OF FIELD NAMES
			; THESE ARE VARIABLE BLOCK ADDRESSES
;
;   THE FFBLOK
;   ----------
	FFOFFS==FCODE+1		; (LEFT) OFFSET WITHIN DATA OBJECT ASSOC
				; IATED WITH THIS FIELD
	FFDFBL==FCODE+1		; (RIGHT) ASSOCIATED DFBLOK
	FFLINK==FCODE+2		; (RIGHT) ADDRESS OF NEXT FFBLOK
				; OR 0 IF NONE.
	LFFBL==FFLINK+1		; LENGTH OF FFBLOK
;
;   The EFBLOK
;   ----------
	EFCALL==FCODE+1		; code to call external function
;
;   THE TFBLOK
;   ----------
 	TFOLD==4
	TFRT==5		; RETURN TRACE FBLOK
	TFCT==6		; CALL TRACE FBLOK
	TFVB==7		; ADDR OF VB.
;
;   THE TRBLOK
;   ----------
	TRVAL==LHDR		; VALUE OF VARIABLE BEING TRACED
	TRNAME==LHDR+2		; NAME OF VARIABLE BEING TRACED
	TRTAG==LHDR+4		; TAG (3RD ARG. TO TRACE)
	TRFUNC==LHDR+6		; FUNCTION (POINTER TO VAR. BLOCK)

;
;	 THE IOBLOK
;	 ----------
	IOMODE==2	; MODE UNDER WHICH FILE WAS OPENED
	IODEV==3	; DEVICE NAME IS SIXBIT
	IOBUFS==4	; 3RD WORD OF OPEN BLOCK
	IONAME==5	; NAME IN SIXBIT
	IOEXT==6	; EXTENSION IN SIXBIT
	IOPRIV==7	; PRIVILEGE IF SPECIFIED
	IOPPN==10	; PROJECT-PROGRAMMER IF SPECIFIED
	IOIBHD==12	; INPUT BUFFER HEADER (3 WORDS)
	IOOBHD==15	; OUTPUT BUFFER HEADER (3 WORDS)
	IOCHAN==11	; CHANNEL # IN BITS (9-12)
	IOLAST==20	; LAST CHARACTER READ ON INPUT (OR 0)
	IOTTY==IOLAST	; FLAG (VIA BIT 0) TO IND. TTY
	IOFLGS==21	; FLAGS AS FOLLOWS
	 IOINFL==400000	; BUFFERED FOR INPUT
	 IOOUFL==200000	; BUFFERED FOR OUTPUT
	IOBUBL==21	; ADDRESS OF BUBLOK
	IONEXT==22	; NEXT IOBLOK
	IOLENG==23	; JUST THE LENGTH OF THE IOBLOK
;
;	THE ASSOCIATION BLOKS (IABLOK & OABLOK)
;	---------------------------------------
;
	AVAL==2		; VALUE (LIFTED FROM ASSOC. VARIABLE)
	AFILE==4	; FILE DESCRIPTOR
	ALENG==6	; THE LENGTH OF AN ABLOK
;
;	THE BUBLOK
;	----------
;
	BUBITS==2	; THE MEAT OF THE BUBLOK
;
;	THE STBLOK
;	----------
;
	STNXT==2	; NEXT STREAM
	STCF==3		; CURRENT FILE
	STIOBL==4	; IOBLOKS

	SUBTTL	1.4 CHARACTER TABLE POSITIONS
;		-----------------------------
;
;	THE FOLLOWING SYMBOLS DEFINE COLUMNS IN THE SYSTEM
;	CHARACTER TABLE DEDICATED TO THE INDICATED CATEGORY.
;	SEE DATA SECTION (PURE DATA).
;
	Y.TAB==	1B0	; POSITION FOR TAB
	Y.BL==	1B1	; POSITION FOR BLANK
	Y.OP==	1B2	; OPERATOR
	Y.QQ==	1B3	; DOUBLE QUOTE
	Y.Q==	1B4	; SINGLE QUOTE
	Y.LP==	1B5	; LEFT PAREN
	Y.RP==	1B6	; RIGHT PAREN
	Y.PLUS==1B7	; PLUS
	Y.CM==	1B8	; COMMA
	Y.MNS== 1B9	; MINUS
	Y.STAR==1B10	; ASTERISK
	Y.PER==	1B11	; PERIOD
	Y.NUM==	1B12	; NUMERICS
	Y.COL==	1B13	; COLON
	Y.SEMI==1B14	; SEMICOLON
	Y.LB==	1B15	; LEFT BRACKET
	Y.RB==	1B16	; RIGHT BRACKET
	Y.UPS==	1B17	; UPPER CASE
	Y.LOWS==1B18	; LOWER CASE
	Y.UN==	1B19	; UNDERSCORE
	Y.E==	1B20	; EXPONENTIAL
	Y.EQ==	1B21	; EQUAL SIGN
	Y.LA==	Y.UN	; LEFT ARROW
	Y.VM==	1B22	; VERTICAL MOTION
	Y.CR==	1B23	; CARRIAGE RETURN
	Y.ALT==	1B24	; ALT-MODE
	Y.SLSH==1B25	; SLASH
	Y.VB==	1B26	; VERTICAL BAR
	Y.CZ==	1B27	; ^Z

	SUBTTL	1.5 SAVE AREA LENGTHS
;		---------------------
;
;	THESE LENGTHS MUST AGREE WITH THE VALUES COMPUTED
;	IN THE DATA REGON.  IF LSAVEI OR LSAVEM IS INCORRECT
;	AN ERROR MESSAGE WILL BE PRODUCED.  HOWEVER IF THE
;	LENGTH OF THE AUXILIARY SAVE AREAS ARE CHANGED NO
;	SUCH WARNING MESSAGE IS GIVEN.
;
;	PATTERN MATCHING SAVE AREA
	LIGNOM==7	; LENGTH OF IGNORED REGION
	LFLAM==4	; LENGTH OF FLOATING ADDR REG
	LSAVEM==LIGNOM+LFLAM+1	; LENGTH OF SAVE AREA
;
;	INTERPRETER SAVE AREA
	LIGNOI==3	; LENGTH OF IGNORED REGION
	LFLAI==4	; LENGTH OF FLOATING ADDRESS REGION
	LSAVEI==LIGNOI+LFLAI+1	; LENGTH OF INTERPRETER SAVE AREA
;
;	UTILITY SAVE AREAS
	LFLA==4		; LENGTH OF FLOATING ADDR REGION
			; (COMMON FOR EACH UTILITY SAVE AREA)
	LIGNO==4	; LENGTH OF IGNORED REGION (ALSO COMMON)
	LSAVE==LIGNO+LFLA+1	; LENGTH OF SAVE AREA FOR UTILITIES
	LSAVEP==LSAVE	; LENGTH OF SAVE REGION FOR PRIMARY ROUTINES
	LSAVES==LSAVE	;		"	    SECONDARY   "
	LSAVET==LSAVE	;  		"	    TERTIARY    "
	LSAVEQ==LSAVE	;		"	    QUATERNARY  "

	SUBTTL	1.6 MISCELLANY
;		--------------
;
	MARGIN==100	; DISTANCE BETWEEN AIR AND SKY
	LDPREC==20	; LEFT DEFAULT PRECEDENCE
	RDPREC==21	; RIGHT DEFAULT PRECEDENCE
	BYTESZ==7	; BYTE SIZE
	NBYTES==^D36/BYTESZ	; NUMBER OF BYTES PER WORD

	SUBTTL	2.1	MISCELLANEOUS COMMON MACROS
;
;	 MIDENT - USED FOR CONVERTING
	DEFINE	MIDENT(X)<X>
;
;	 FUNC - USED AS PREFIX FOR PRIMARY ROUTINES
	DEFINE	FUNC(NAME,NARGS,FLAGS)<
	EXDATA		;; ESTABLISH LINKAGE TO DATA AREA
	INTERN	NAME
	NAME=.-2	;; NO NEED FOR A PHONEY HEADER
	FUNCF==0	;; WILL CONTAIN COMPUTED FLAGS
	IRPC	FLAGS<IFIDN<FLAGS><E><FUNCF==FUNCF!FEAFL> >
			;;IF E INSERT FEAFL
	IRPC	FLAGS<IFIDN<FLAGS><S><FUNCF==FUNCF!FSAFL> >
			;; IF S INSERT FSAFL
	IFN	NARGS,<NARGSA==NARGS>	
			;;USE GIVEN VALUE FOR NARGS IF NONZERO
	IFE	NARGS,<NARGSA==377777>	
			;; OTHERWISE USE INFINITY
	XWD	MIDENT(\FUNCF),MIDENT(\NARGSA)>	
			;; ASSEMBLE FFLAGS,FNARGS WORD
	
	 ; ERROR SIGNALLING
	 ;
	ERRSFL==2000		; ERROR STACK FLAG
	ERRPFL==4000		; ERROR POINT FLAG
	OPDEF	ERR [1000,,0]	; USER UUO FOR ERRORS
	OPDEF	ERR. [<1000+ERRSFL>,,0]
	OPDEF	ERR% [<1000+ERRPFL>,,0]
			; USER UUO FOR PARAMETERIZED ERRORS
;	 ERROR - ASSEMBLES A WORD TO HANDLE AN EXECUTION
; 	TIME ERROR.
	DEFINE	ERROR(N,M)
<	RADIX	10
	N%N==N
	IFE <N%N-15>,<HALT>
	IFN <N%N-15>,< ERR N,M>
	RADIX	8>
	 ;
	 ; ERROR. IS A PARAMETERIZED ERROR
	 ; PARAMETER IS ON THE STACK
	 ;
	DEFINE	ERROR.(N,M)
<	RADIX	10
	ERR.	N,M
	RADIX	8>
	 ;
	 ; ERROR% IS A PARAMETERIZED ERROR
	 ; PARAMETER IS POINTED TO BY Q3
	 ;
	DEFINE	ERROR%(N,M)
<	RADIX	10
	ERR%	N,M
	RADIX	8>

	SUBTTL	2.2.1   PUSH - POP MACROS (INITIALIZATION)
;
;   PPINIT IS CALLED BY EACH OF PUSHSA, PUSHR, POPSA & POPR
;	IT ESTABLISHES 2 MACROS.  PPADDR RETURNS THE ADDRESS
;	OF THE AREA THAT IS TO BE PUSHED OR POPPED.
;	PPLENG RETURNS THE LENGTH OF THIS AREA.
;	TO MAKE THIS EASY THE FOLLOWING EQUATED SYMBOLS ARE DEFINED.
;
;	REGI==	IREG
;	LREGI==	1
	REGP==	P1
	LREGP==	2
	REGS==	S1
	LREGS==	3
	REGT==	T1
	LREGT==	4
	REGQ==	Q1
	LREGQ==	3
;
	DEFINE	PPINIT(TYPE,CODE)<	
			;; TYPE MUST BE EITHER REG OR SAVE
			;; CODE IS ARG PASSED FROM ORIGINAL CALL
			;; MAY CONTAIN LEADING BLANKS
	IRPC	CODE<
		IFNB <CODE><DEFINE PPADDR<TYPE'CODE>
			STOPI>>	
			;; SO MUCH FOR THE DEF. OF PPADDR
	PPL==0		;; WE WILL COMPUTE HERE THE LENGTH OF THE AREA
	IRPC	CODE<
		IFNB	<CODE><PPL==PPL+L'TYPE'CODE>>
	DEFINE	PPLENG<MIDENT(\PPL)>	>

	SUBTTL	2.2.2  ACTUAL PUSH - POP MACROS
;   PUSHSA - PUSH ONE OR MORE CONTIGUOUS SAVE AREAS
;
  	DEFINE	PUSHSA(CODE)
<	PPINIT(SAVE,CODE)	;; INITIALIZE THINGS
	EXDATA	;; ESTABLISH AS EXTERNAL ALL SAVE AREA ADRESSES.
  JSP  Z,PSHSA##  ;; CALL SUBROUTINE
  XWD  PPLENG,PPADDR >
;
;   POPSA - POP ONE OR MORE CONTIGUOUS SAVE AREAS
;
	DEFINE	POPSA(CODE)
<	PPINIT(SAVE,CODE)	;; INITIALIZE THINGS
	EXDATA	;; ESTABLISH AS EXTERNAL ALL SAVE AREA ADRESSES.
  JSP  Z,PPSA##
  XWD  PPLENG,PPADDR >
;
;   PUSHR - PUSH A COLLECTION OF REGISTERS
;
	DEFINE	PUSHR(CODE)
<	PPINIT(REG,CODE)	;; INITIALIZE THINGS
  JSP  Z,PSHR##
  XWD  PPLENG+1,PPADDR >
;
;   POPR - POP A COLLECTION OF REGISTERS
;
	DEFINE	POPR(CODE)
<	PPINIT(REG,CODE)
  JSP  Z,PPR##
  XWD  PPLENG,PPADDR >

	SUBTTL	2.3	EXTERNAL SYMBOLS IN THE DATA AREA
	DEFINE	EXDATA<
;;
;;	 PURE DATA
;;	COMMON CODE
	EXTERN	RETNL2,RETNL1,RETNUL,FRET3,FRET2,FRET1
;;	STRINGS
	EXTERN	$ALPHA,ALPHAC,SYSTR,NULLST
;;		COMPILER ERROR STRINGS
	EXTERN	CE.PRE,CE.CE
	EXTERN	CE.GT,CE.NI,CE.IC
	EXTERN	CE.PL,CE.ME
	EXTERN	CE.BL,CE.UT,CE.QT,CE.SYS
;; 	CHARACTER SETS
	EXTERN	SYSCT,SYSCTB
;;
;; IMPURE DATA
	EXTERN	INIMP,TENDED,AID
;;	NON FLOATING, NON RECURSIVE IMPURE DATA
	EXTERN	PREX,CEIL,FLOOR,STBASE,HSBASE,NSBASE,BROOM,VTABLE
	EXTERN	NINS,NOUTS,NGCS
	EXTERN	LVTBL,TIME.S,TIME.C,GRID,GSURF,NLINES,CMPNO
;;	 IMPURE KEYWORDS
	EXTERN	$FNCLV,$LASTN,$RTNTP,$STCNT,$STFCT,$STNO
	EXTERN	$ANCH,$CODE,$DUMP,$ERRTP,$ERRLM,$FTRC
	EXTERN	$FULL,$INPUT,$MAXL,$OUTPT,$STLIM,$TRACE,$TRIM
;;	SAVE AREAS
;;			PATTERN MATCHING SAVE AREA
	EXTERN	SAVEM,IGNOM,CURSOR,STPTR,MAXLEN,HSTACK
	EXTERN	NSTACK,FUTILE,FLAM,SUBJ,PATT
;;			INTERPRETER SAVE AREA
	EXTERN	SAVEI,IGNOI,GROUND,PUSHTP,STSAVE,FLAI,ILABEL,ILOC
;;			OTHER SAVE AREAS
	EXTERN	SAVEP,IGNOP,FLAP,SAVES,IGNOS,FLAS,SAVET,IGNOT
	EXTERN	FLAT,SAVEQ,IGNOQ,FLAQ
;;	MISC. DESCRIPTORS
	EXTERN	LISTF,CERRF,XERRF,OUTF,COMPIN,INFILE,LASTCI,CCTBL
;;
;; FINAL WRAP-UP;	NULL OUT THIS MACRO
	DEFINE	EXDATA<> >

	LIST		; RESTORE LISTING FOR USER
	IFDEF	%COM,< IFE %COM+2,<END>>
	ASUPPRESS

